Queries
1. List all the columns of the Salespeople table
select * from salespeople;
+------+---------+-----------+------+
| snum | sname   | city      | comm |
+------+---------+-----------+------+
| 1001 | Peel    | London    | 0.12 |
| 1002 | Serres  | San Jose  | 0.13 |
| 1003 | AxelRod | New York  | 0.10 |
| 1004 | Motika  | London    | 0.11 |
| 1005 | Fran    | London    | 0.26 |
| 1007 | Rifkin  | Barcelona | 0.15 |
+------+---------+-----------+------+
=================================================================================================================================================
2. List all customers with a rating of 100.
select * from customer where rating=100;
+------+---------+--------+--------+------+
| cnum | cname   | city   | rating | snum |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | praveen | London |    100 | 1001 |
| 2007 | Satish  | Rome   |    100 | 1004 |
+------+---------+--------+--------+------+
=================================================================================================================================================
3. Find all records in the Customer table with NULL values in the city column
select * from customer where city is null;                                                                                                       
Empty set (0.01 sec)
=================================================================================================================================================
4. Find the largest order taken by each salesperson on each date.
select s.snum,max(amt) as largest_amount  from salespeople s join customer c join orders o on s.snum=c.snum and c.cnum=o.cnum group by s.snum;   
+------+----------------+
| snum | largest_amount |
+------+----------------+
| 1001 |         900.60 |
| 1002 |         180.69 |
| 1003 |         345.90 |
| 1004 |        1800.09 |
| 1007 |         300.13 |
+------+----------------+
=================================================================================================================================================
5. Arrange the Orders table by descending customer number.

select o.onum,o.amt,o.odate,o.cnum from salespeople s join customer c join orders o on s.snum=c.snum and c.cnum=o.cnum group by c.cnum;          
+------+---------+------------+------+
| onum | amt     | odate      | cnum |
+------+---------+------------+------+
| 3003 |  900.60 | 1996-04-05 | 2001 |
| 3007 |  111.19 | 1996-06-13 | 2002 |
| 3005 |  156.10 | 1996-02-11 | 2003 |
| 3010 |  180.69 | 1996-06-30 | 2004 |
| 3008 |  190.49 | 1996-07-12 | 2006 |
| 3002 | 1800.09 | 1996-04-17 | 2007 |
| 3001 |   18.69 | 1996-03-10 | 2008 |
+------+---------+------------+------+
=================================================================================================================================================
6. Find which salespeople currently have orders in the Orders table

select s.snum,c.cnum,o.onum from salespeople s join customer c join orders o on s.snum=c.snum and c.cnum=o.cnum;                                                                                  
+------+------+------+
| snum | cnum | onum |
+------+------+------+
| 1001 | 2001 | 3003 |
| 1001 | 2006 | 3008 |
| 1001 | 2006 | 3011 |
| 1002 | 2003 | 3005 |
| 1002 | 2004 | 3010 |
| 1003 | 2002 | 3007 |
| 1003 | 2002 | 3009 |
| 1004 | 2007 | 3002 |
| 1007 | 2008 | 3001 |
| 1007 | 2008 | 3006 |
+------+------+------+
=================================================================================================================================================
7. List names of all customers matched with the salespeople serving them.
select s.snum,s.sname, c.cnum,c.cname from salespeople s join customer c on s.snum=c.snum;
+------+---------+------+---------+
| snum | sname   | cnum | cname   |
+------+---------+------+---------+
| 1001 | Peel    | 2001 | Hoffman |
| 1003 | AxelRod | 2002 | Ram     |
| 1002 | Serres  | 2003 | Kishen  |
| 1002 | Serres  | 2004 | Sath    |
| 1001 | Peel    | 2006 | praveen |
| 1004 | Motika  | 2007 | Satish  |
| 1007 | Rifkin  | 2008 | Karthik |
+------+---------+------+---------+
=================================================================================================================================================
8. Find the names and numbers of all salespeople who had more than one customer
select s.snum,count(c.cnum) as No_of_customers from salespeople s join customer c on s.snum=c.snum group by s.snum having count(c.cnum)>1;
+------+-----------------+
| snum | No_of_customers |
+------+-----------------+
| 1001 |               2 |
| 1002 |               2 |
+------+-----------------+
=================================================================================================================================================
9. Count the orders of each of the salespeople and output the results in descending order.
MariaDB [retail]> select s.snum,count(s.snum) from salespeople s join customer c join orders o on s.snum=c.snum and c.cnum=o.cnum group by s.snum order by s.snum desc;
+------+---------------+
| snum | count(s.snum) |
+------+---------------+
| 1007 |             2 |
| 1004 |             1 |
| 1003 |             2 |
| 1002 |             2 |
| 1001 |             3 |
+------+---------------+
=================================================================================================================================================
10. List the Customer table if and only if one or more of the customers in the Customer table are
located in San Jose.

select * from customer where city="San Jose";
+------+---------+----------+--------+------+
| cnum | cname   | city     | rating | snum |
+------+---------+----------+--------+------+
| 2003 | Kishen  | San Jose |    200 | 1002 |
| 2008 | Karthik | San Jose |    300 | 1007 |
+------+---------+----------+--------+------+
=================================================================================================================================================
11. Match salespeople to customers according to what city they lived in.
select * from salespeople s join customer c on s.snum=c.snum where s.city=c.city;
+------+--------+----------+------+------+---------+----------+--------+------+
| snum | sname  | city     | comm | cnum | cname   | city     | rating | snum |
+------+--------+----------+------+------+---------+----------+--------+------+
| 1001 | Peel   | London   | 0.12 | 2001 | Hoffman | London   |    100 | 1001 |
| 1002 | Serres | San Jose | 0.13 | 2003 | Kishen  | San Jose |    200 | 1002 |
| 1001 | Peel   | London   | 0.12 | 2006 | praveen | London   |    100 | 1001 |
+------+--------+----------+------+------+---------+----------+--------+------+
=================================================================================================================================================
12. Find the largest order taken by each salesperson.
select s.snum,max(o.amt) from salespeople s join customer c join orders o on s.snum=c.snum and c.cnum=o.cnum group by s.snum;
+------+------------+
| snum | max(o.amt) |
+------+------------+
| 1001 |     900.60 |
| 1002 |     180.69 |
| 1003 |     345.90 |
| 1004 |    1800.09 |
| 1007 |     300.13 |
+------+------------+
=================================================================================================================================================
13. Find customers in San Jose who have a rating above 200.
select * from customer where city="San Jose" and rating>200;
+------+---------+----------+--------+------+
| cnum | cname   | city     | rating | snum |
+------+---------+----------+--------+------+
| 2008 | Karthik | San Jose |    300 | 1007 |
+------+---------+----------+--------+------+
=================================================================================================================================================
14. List the names and commissions of all salespeople in London.
select sname,comm,city from salespeople where city='London';                                                                                     
+--------+------+--------+
| sname  | comm | city   |
+--------+------+--------+
| Peel   | 0.12 | London |
| Motika | 0.11 | London |
| Fran   | 0.26 | London |
+--------+------+--------+
=================================================================================================================================================
15. List all the orders of salesperson Motika from the Orders table
 select * from salespeople s join customer c join orders o on s.snum=c.snum and c.cnum=o.cnum where s.sname='Motika';
+------+--------+--------+------+------+--------+------+--------+------+------+---------+------------+------+
| snum | sname  | city   | comm | cnum | cname  | city | rating | snum | onum | amt     | odate      | cnum |
+------+--------+--------+------+------+--------+------+--------+------+------+---------+------------+------+
| 1004 | Motika | London | 0.11 | 2007 | Satish | Rome |    100 | 1004 | 3002 | 1800.09 | 1996-04-17 | 2007 |
+------+--------+--------+------+------+--------+------+--------+------+------+---------+------------+------+
=================================================================================================================================================
16. Find all customers with orders on October 3.
 select c.cnum,c.cname from customer c join orders o on c.cnum=o.cnum where o.odate='1996-03-10';
+------+---------+
| cnum | cname   |
+------+---------+
| 2008 | Karthik |
+------+---------+
=================================================================================================================================================
17. Give the sums of the amounts from the Orders table, grouped by date, eliminating all those
dates where the SUM was not at least 2000.00 above the MAX amount.
select sum(amt),odate from orders group by odate having (sum(amt))>2000;                                                                       
Empty set (0.00 sec)

=================================================================================================================================================
18. Select all orders that had amounts that were greater than at least one of the orders from
October 6.
select * from orders where odate >'1996-10-05';                                                                                                  
Empty set (0.00 sec)
=================================================================================================================================================

20. Find all pairs of customers having the same rating.
MariaDB [retail]> select * from customer order by rating;                                                                       
+------+---------+----------+--------+------+
| cnum | cname   | city     | rating | snum |
+------+---------+----------+--------+------+
| 2001 | Hoffman | London   |    100 | 1001 |
| 2006 | praveen | London   |    100 | 1001 |
| 2007 | Satish  | Rome     |    100 | 1004 |
| 2002 | Ram     | Rome     |    200 | 1003 |
| 2003 | Kishen  | San Jose |    200 | 1002 |
| 2004 | Sath    | Berlin   |    300 | 1002 |
| 2008 | Karthik | San Jose |    300 | 1007 |
+------+---------+----------+--------+------+
=================================================================================================================================================
21. Find all customers whose CNUM is 1000 above the SNUM of Serres.
select c.cnum,c.cname from salespeople s join customer c  on s.snum=c.snum where c.cnum>2002;
+------+---------+
| cnum | cname   |
+------+---------+
| 2003 | Kishen  |
| 2004 | Sath    |
| 2006 | praveen |
| 2007 | Satish  |
| 2008 | Karthik |
+------+---------+
=================================================================================================================================================

22. Give the salespeople’s commissions as percentages instead of decimal numbers.
select sname,comm*100 as comm from salespeople;
+---------+-------+
| sname   | comm  |
+---------+-------+
| Peel    | 12.00 |
| Serres  | 13.00 |
| AxelRod | 10.00 |
| Motika  | 11.00 |
| Fran    | 26.00 |
| Rifkin  | 15.00 |
+---------+-------+
=================================================================================================================================================
23. Find the largest order taken by each salesperson on each date, eliminating those MAX orders
which are less than $3000.00 in value.
select s.snum,s.sname,max(o.amt),o.odate from salespeople s join customer c join orders o on s.snum=c.snum and c.cnum=o.cnum group by s.snum having (max(o.amt))>190;
+------+---------+------------+------------+
| snum | sname   | max(o.amt) | odate      |
+------+---------+------------+------------+
| 1001 | Peel    |     900.60 | 1996-04-05 |
| 1003 | AxelRod |     345.90 | 1996-06-13 |
| 1004 | Motika  |    1800.09 | 1996-04-17 |
| 1007 | Rifkin  |     300.13 | 1996-03-10 |
+------+---------+------------+------------+
=================================================================================================================================================
24. List the largest orders for October 3, for each salesperson.
select s.snum,s.sname,o.odate,max(o.amt) as largest_order from salespeople s join customer c join orders o on s.snum=c.snum and c.cnum=o.cnum where o.odate='1996-03-10';                                                                                   
+------+--------+------------+---------------+
| snum | sname  | odate      | largest_order |
+------+--------+------------+---------------+
| 1007 | Rifkin | 1996-03-10 |         18.69 |
+------+--------+------------+---------------+
=================================================================================================================================================

25. Find all customers located in cities where Serres (SNUM 1002) has customers
select s.snum,s.sname,c.cname,c.city from salespeople s join customer c on s.snum=c.snum where s.snum=1002;          
+------+--------+--------+----------+
| snum | sname  | cname  | city     |
+------+--------+--------+----------+
| 1002 | Serres | Kishen | San Jose |
| 1002 | Serres | Sath   | Berlin   |
+------+--------+--------+----------+

=================================================================================================================================================
26. Select all customers with a rating above 200.00.
 select cnum,cname,rating from customer where rating>200;                                                             
+------+---------+--------+
| cnum | cname   | rating |
+------+---------+--------+
| 2004 | Sath    |    300 |
| 2008 | Karthik |    300 |
+------+---------+--------+
=================================================================================================================================================
27. Count the number of salespeople currently listing orders in the Orders table.
select count(s.snum)as no_of_salesmen from salespeople s join customer c join orders o on s.snum=c.snum and c.cnum=o.cnum;
+----------------+
| no_of_salesmen |
+----------------+
|             10 |
+----------------+

=================================================================================================================================================
28. Write a query that produces all customers serviced by salespeople with a commission above
12%. Output the customer’s name and the salesperson’s rate of commission.
select c.cname,s.sname,s.comm as rate_of_commision from salespeople s join customer c on s.snum=c.snum where s.comm>'0.12';                                                                                                                                 
+---------+--------+-------------------+
| cname   | sname  | rate_of_commision |
+---------+--------+-------------------+
| Kishen  | Serres |              0.13 |
| Sath    | Serres |              0.13 |
| Karthik | Rifkin |              0.15 |
+---------+--------+-------------------+
=================================================================================================================================================
29. Find salespeople who have multiple customers
select s.snum,count(c.cnum) as "no of customers" from salespeople s join customer c on s.snum=c.snum group by s.snum having count(c.cnum)>1;
+------+-----------------+
| snum | no of customers |
+------+-----------------+
| 1001 |               2 |
| 1002 |               2 |
+------+-----------------+
=================================================================================================================================================
30. Find salespeople with customers located in their city.
 Select s.snum,s.sname from salespeople s join customer c on s.snum=c.snum where c.city=s.city;                       
+------+--------+
| snum | sname  |
+------+--------+
| 1001 | Peel   |
| 1002 | Serres |
| 1001 | Peel   |
+------+--------+
=================================================================================================================================================
31. Find all salespeople whose name starts with ‘P’ and the fourth character is ‘l’.
select * from customer where cname like 'P__l%';
Empty set (0.00 sec)
=================================================================================================================================================
32. Write a query that uses a subquery to obtain all orders for the customer named Cisneros.
Assume you do not know his customer number
MariaDB [retail]> select * from orders o join customer c on o.cnum=c.cnum where c.cnum=(select c.cnum from customer where cname="Hoffma");                         
Empty set (0.00 sec)
=================================================================================================================================================
33. Find the largest orders for Serres and Rifkin
select s.snum,s.sname,max(o.amt) from salespeople s join customer c join orders o on s.snum=c.snum and c.cnum=o.cnum where s.sname in ('Serres','Rifkin') group by s.snum;
+------+--------+------------+
| snum | sname  | max(o.amt) |
+------+--------+------------+
| 1002 | Serres |     180.69 |
| 1007 | Rifkin |     300.13 |
+------+--------+------------+
=================================================================================================================================================
34. Extract the Salespeople table in the following order : SNUM, SNAME, COMMISSION, CITY.
select snum as SNUM, sname as SNAME, comm as COMMISSION,city as CITY from salespeople;
+------+---------+------------+-----------+
| SNUM | SNAME   | COMMISSION | CITY      |
+------+---------+------------+-----------+
| 1001 | Peel    |       0.12 | London    |
| 1002 | Serres  |       0.13 | San Jose  |
| 1003 | AxelRod |       0.10 | New York  |
| 1004 | Motika  |       0.11 | London    |
| 1005 | Fran    |       0.26 | London    |
| 1007 | Rifkin  |       0.15 | Barcelona |
+------+---------+------------+-----------+
=================================================================================================================================================
35. Select all customers whose names fall in between ‘A’ and ‘G’ alphabetical range.
 select cnum,cname from customer where cname between 'A%' and 'G%';
Empty set (0.00 sec)

MariaDB [retail]> select cnum,cname from customer where cname not between 'A%' and 'G%';                                                                           
+------+---------+
| cnum | cname   |
+------+---------+
| 2001 | Hoffman |
| 2002 | Ram     |
| 2003 | Kishen  |
| 2004 | Sath    |
| 2006 | praveen |
| 2007 | Satish  |
| 2008 | Karthik |
+------+---------+
=================================================================================================================================================
36. Select all the possible combinations of customers that you can assign.

=================================================================================================================================================
37. Select all orders that are greater than the average for October 4.
select * from orders where amt>(select avg(amt) from orders  where odate='1996-02-11');                                                          
+------+---------+------------+------+
| onum | amt     | odate      | cnum |
+------+---------+------------+------+
| 3002 | 1800.09 | 1996-04-17 | 2007 |
| 3003 |  900.60 | 1996-04-05 | 2001 |
| 3006 |  300.13 | 1996-05-11 | 2008 |
| 3008 |  190.49 | 1996-07-12 | 2006 |
| 3009 |  345.90 | 1996-06-15 | 2002 |
| 3010 |  180.69 | 1996-06-30 | 2004 |
| 3011 |  234.19 | 1996-07-20 | 2006 |
+------+---------+------------+------+
=================================================================================================================================================
38. Write a select command using a corelated subquery that selects the names and numbers of all
customers with ratings equal to the maximum for their city
 select cnum,cname ,city,rating from customer where rating in (select  max(rating) from customer group by city);                                  
+------+---------+----------+--------+
| cnum | cname   | city     | rating |
+------+---------+----------+--------+
| 2001 | Hoffman | London   |    100 |
| 2002 | Ram     | Rome     |    200 |
| 2003 | Kishen  | San Jose |    200 |
| 2004 | Sath    | Berlin   |    300 |
| 2006 | praveen | London   |    100 |
| 2007 | Satish  | Rome     |    100 |
| 2008 | Karthik | San Jose |    300 |
+------+---------+----------+--------+
=================================================================================================================================================
39. Write a query that totals the orders for each day and places the results in descending order.
 select onum,sum(amt) from orders group by odate order by sum(amt) desc;                                                                          
+------+----------+
| onum | sum(amt) |
+------+----------+
| 3002 |  1800.09 |
| 3003 |   900.60 |
| 3009 |   345.90 |
| 3006 |   300.13 |
| 3011 |   234.19 |
| 3008 |   190.49 |
| 3010 |   180.69 |
| 3005 |   156.10 |
| 3007 |   111.19 |
| 3001 |    18.69 |
+------+----------+
=================================================================================================================================================
40. Write a select command that produces the rating followed by the name of each customer in
San Jose.
 select cnum,cname,rating from customer where city='San Jose';
+------+---------+--------+
| cnum | cname   | rating |
+------+---------+--------+
| 2003 | Kishen  |    200 |
| 2008 | Karthik |    300 |
+------+---------+--------+
==================================================================================================================================================
41. Find all orders with amounts smaller than any amount for a customer in San Jose.
 select * from orders o join customer c on o.cnum=c.cnum where o.amt <  in (select min(o.amt) from orders where c.city='San Jose');               
==================================================================================================================================================
42. Find all orders with above average amounts for their customers
select * from orders where amt>(select avg(amt) from orders);
+------+---------+------------+------+
| onum | amt     | odate      | cnum |
+------+---------+------------+------+
| 3002 | 1800.09 | 1996-04-17 | 2007 |
| 3003 |  900.60 | 1996-04-05 | 2001 |
+------+---------+------------+------+
=================================================================================================================================================
43. Write a query that selects the highest rating in each city.
 select * from orders o join customer c on o.cnum=c.cnum where rating  = (select max(rating) from orders group by city order by rating);
+------+---------+------------+------+------+---------+----------+--------+------+
| onum | amt     | odate      | cnum | cnum | cname   | city     | rating | snum |
+------+---------+------------+------+------+---------+----------+--------+------+
| 3001 |   18.69 | 1996-03-10 | 2008 | 2008 | Karthik | San Jose |    300 | 1007 |
| 3002 | 1800.09 | 1996-04-17 | 2007 | 2007 | Satish  | Rome     |    100 | 1004 |
| 3003 |  900.60 | 1996-04-05 | 2001 | 2001 | Hoffman | London   |    100 | 1001 |
| 3005 |  156.10 | 1996-02-11 | 2003 | 2003 | Kishen  | San Jose |    200 | 1002 |
| 3006 |  300.13 | 1996-05-11 | 2008 | 2008 | Karthik | San Jose |    300 | 1007 |
| 3007 |  111.19 | 1996-06-13 | 2002 | 2002 | Ram     | Rome     |    200 | 1003 |
| 3008 |  190.49 | 1996-07-12 | 2006 | 2006 | praveen | London   |    100 | 1001 |
| 3009 |  345.90 | 1996-06-15 | 2002 | 2002 | Ram     | Rome     |    200 | 1003 |
| 3010 |  180.69 | 1996-06-30 | 2004 | 2004 | Sath    | Berlin   |    300 | 1002 |
| 3011 |  234.19 | 1996-07-20 | 2006 | 2006 | praveen | London   |    100 | 1001 |
+------+---------+------------+------+------+---------+----------+--------+------+
=================================================================================================================================================
44. Write a query that calculates the amount of the salesperson’s commission on each order by a
customer with a rating above 100.00.
MariaDB [retail]> select s.snum,s.comm from salespeople s join customer c join orders o on s.snum=c.cnum and c.cnum=o.cnum where s.comm in( select sum(s.comm) from orders where c.rating >= ( select c.rating from customer where c.rating >=100));                                                                                  
Empty set (0.01 sec)
=================================================================================================================================================
45. Count the customers with ratings above San Jose’s average.
select cnum,cname,rating from customer where rating>(select avg(rating) from customer where city='San Jose');
+------+---------+--------+
| cnum | cname   | rating |
+------+---------+--------+
| 2004 | Sath    |    300 |
| 2008 | Karthik |    300 |
+------+---------+--------+
=================================================================================================================================================
47. Find all salespeople that are located in either Barcelona or London. 
select * from salespeople where city in ('Barcelona','London');
+------+--------+-----------+------+
| snum | sname  | city      | comm |
+------+--------+-----------+------+
| 1001 | Peel   | London    | 0.12 |
| 1004 | Motika | London    | 0.11 |
| 1005 | Fran   | London    | 0.26 |
| 1007 | Rifkin | Barcelona | 0.15 |
+------+--------+-----------+------+
=================================================================================================================================================
Find all salespeople with only one customer
select s.snum,s.sname,c.cnum,c.cname,count(c.snum) from salespeople s join customer c on s.snum=c.snum group by c.snum having (count(c.snum))=1;
+------+---------+------+---------+---------------+
| snum | sname   | cnum | cname   | count(c.snum) |
+------+---------+------+---------+---------------+
| 1003 | AxelRod | 2002 | Ram     |             1 |
| 1004 | Motika  | 2007 | Satish  |             1 |
| 1007 | Rifkin  | 2008 | Karthik |             1 |
+------+---------+------+---------+---------------+
=================================================================================================================================================
49. Write a query that joins the Customer table to itself to find all pairs of customers served by a single salesperson
=================================================================================================================================================
50. Write a query that will give you all orders for more than $200.0
select * from orders where amt>200;
+------+---------+------------+------+
| onum | amt     | odate      | cnum |
+------+---------+------------+------+
| 3002 | 1800.09 | 1996-04-17 | 2007 |
| 3003 |  900.60 | 1996-04-05 | 2001 |
| 3006 |  300.13 | 1996-05-11 | 2008 |
| 3009 |  345.90 | 1996-06-15 | 2002 |
| 3011 |  234.19 | 1996-07-20 | 2006 |
+------+---------+------------+------+
=================================================================================================================================================
51. Write a query that lists each order number followed by the name of the customer who made that order
select o.onum,c.cnum,c.cname from orders o join customer c on o.cnum=c.cnum;
+------+------+---------+
| onum | cnum | cname   |
+------+------+---------+
| 3003 | 2001 | Hoffman |
| 3007 | 2002 | Ram     |
| 3009 | 2002 | Ram     |
| 3005 | 2003 | Kishen  |
| 3010 | 2004 | Sath    |
| 3008 | 2006 | praveen |
| 3011 | 2006 | praveen |
| 3002 | 2007 | Satish  |
| 3001 | 2008 | Karthik |
| 3006 | 2008 | Karthik |
+------+------+---------+
=================================================================================================================================================
52. Write 2 queries that select all salespeople (by name and number) who have customers in their 
cities who they do not service, one using a join and one a corelated subquery. Which solution is more elegant?
=================================================================================================================================================
53. Write a query that selects all customers whose ratings are equal to or greater than ANY (in the SQL sense) of Serres’? 
 select s.snum,s.sname,c.cnum,c.cname,c.rating from salespeople s join customer c on s.snum=c.snum where rating>200;
+------+--------+------+---------+--------+
| snum | sname  | cnum | cname   | rating |
+------+--------+------+---------+--------+
| 1002 | Serres | 2004 | Sath    |    300 |
| 1007 | Rifkin | 2008 | Karthik |    300 |
+------+--------+------+---------+--------+
=================================================================================================================================================
55. Write a query that produces all pairs of orders by a given customer. Name that customer and eliminate duplicates. 
select s.snum,s.sname,c.cnum,c.cname,c.rating from salespeople s join customer c on s.snum=c.snum order by s.snum;
+------+---------+------+---------+--------+
| snum | sname   | cnum | cname   | rating |
+------+---------+------+---------+--------+
| 1001 | Peel    | 2001 | Hoffman |    100 |
| 1001 | Peel    | 2006 | praveen |    100 |
| 1002 | Serres  | 2003 | Kishen  |    200 |
| 1002 | Serres  | 2004 | Sath    |    300 |
| 1003 | AxelRod | 2002 | Ram     |    200 |
| 1004 | Motika  | 2007 | Satish  |    100 |
| 1007 | Rifkin  | 2008 | Karthik |    300 |
+------+---------+------+---------+--------+
=================================================================================================================================================
56. Find only those customers whose ratings are higher than every customer in Rome.
select * from customer where rating>(select max(rating) from customer where city='Rome');                                                      
+------+---------+----------+--------+------+
| cnum | cname   | city     | rating | snum |
+------+---------+----------+--------+------+
| 2004 | Sath    | Berlin   |    300 | 1002 |
| 2008 | Karthik | San Jose |    300 | 1007 |
+------+---------+----------+--------+------+
=================================================================================================================================================
57. Write a query on the Customers table whose output will exclude all customers with a rating <= 100.00, unless they are located in Rome. 
select * from customer where (rating<=100 and city='Rome') or rating>100;
+------+---------+----------+--------+------+
| cnum | cname   | city     | rating | snum |
+------+---------+----------+--------+------+
| 2002 | Ram     | Rome     |    200 | 1003 |
| 2003 | Kishen  | San Jose |    200 | 1002 |
| 2004 | Sath    | Berlin   |    300 | 1002 |
| 2007 | Satish  | Rome     |    100 | 1004 |
| 2008 | Karthik | San Jose |    300 | 1007 |
+------+---------+----------+--------+------+
=================================================================================================================================================
58. Find all rows from the Customers table for which the salesperson number is 1001. 
select * from customer where snum=1001;
+------+---------+--------+--------+------+
| cnum | cname   | city   | rating | snum |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | praveen | London |    100 | 1001 |
+------+---------+--------+--------+------+
=================================================================================================================================================
59. Find the total amount in Orders for each salesperson for whom this total is greater than the
amount of the largest order in the table.
=================================================================================================================================================
60. Write a query that selects all orders save those with zeroes or NULLs in the amount field.

select * from orders where amt is null or amt=0;
=================================================================================================================================================
61. Produce all combinations of salespeople and customer names such that the former precedes
the latter alphabetically, and the latter has a rating of less than 200.
=================================================================================================================================================
62. List all Salespeople’s names and the Commission they have earned.
select sname,comm from salespeople;
+---------+------+
| sname   | comm |
+---------+------+
| Peel    | 0.12 |
| Serres  | 0.13 |
| AxelRod | 0.10 |
| Motika  | 0.11 |
| Fran    | 0.26 |
| Rifkin  | 0.15 |
+---------+------+
=================================================================================================================================================
63. Write a query that produces the names and cities of all customers with the same rating as
Hoffman. Write the query using Hoffman’s CNUM rather than his rating, so that it would still be
usable if his rating changed.

select cname,cnum,city,rating from customer where rating in(select rating from customer where cnum=2001);             
+---------+------+--------+--------+
| cname   | cnum | city   | rating |
+---------+------+--------+--------+
| Hoffman | 2001 | London |    100 |
| praveen | 2006 | London |    100 |
| Satish  | 2007 | Rome   |    100 |
+---------+------+--------+--------+
=================================================================================================================================================
65. Write a query that produces the names and ratings of all customers of all who have above
average orders.
select c.cname,c.rating,o.amt from customer c join orders o on c.cnum=o.cnum where amt>(select avg(amt) as avg_amt from orders)group by c.cname;                                                                                                             
+---------+--------+---------+
| cname   | rating | amt     |
+---------+--------+---------+
| Hoffman |    100 |  900.60 |
| Satish  |    100 | 1800.09 |
+---------+--------+---------+
=================================================================================================================================================
66. Find the SUM of all purchases from the Orders table.
select sum(amt) as Total_amt from orders;                                                                             
+-----------+
| Total_amt |
+-----------+
|   4238.07 |
+-----------+
=================================================================================================================================================
67. Write a SELECT command that produces the order number, amount and date for all rows in
the order table.
select onum,odate from orders;
+------+------------+
| onum | odate      |
+------+------------+
| 3001 | 1996-03-10 |
| 3002 | 1996-04-17 |
| 3003 | 1996-04-05 |
| 3005 | 1996-02-11 |
| 3006 | 1996-05-11 |
| 3007 | 1996-06-13 |
| 3008 | 1996-07-12 |
| 3009 | 1996-06-15 |
| 3010 | 1996-06-30 |
| 3011 | 1996-07-20 |
+------+------------+
=================================================================================================================================================
68. Count the number of nonNULL rating fields in the Customers table (including repeats).
select count(rating) as count_of_nonNULL_rating from customer;                                                       
+-------------------------+
| count_of_nonNULL_rating |
+-------------------------+
|                       7 |
+-------------------------+
=================================================================================================================================================
69. Write a query that gives the names of both the salesperson and the customer for each order
after the order number.
select s.sname,c.cname,o.onum from customer c join salespeople s join orders o on s.snum=c.snum and c.cnum=o.cnum;    
+---------+---------+------+
| sname   | cname   | onum |
+---------+---------+------+
| Peel    | Hoffman | 3003 |
| AxelRod | Ram     | 3007 |
| AxelRod | Ram     | 3009 |
| Serres  | Kishen  | 3005 |
| Serres  | Sath    | 3010 |
| Peel    | praveen | 3008 |
| Peel    | praveen | 3011 |
| Motika  | Satish  | 3002 |
| Rifkin  | Karthik | 3001 |
| Rifkin  | Karthik | 3006 |
+---------+---------+------+

=================================================================================================================================================
70. List the commissions of all salespeople servicing customers in London.
MariaDB [retail]> select s.sname,s.comm,c.city,c.cname from salespeople s join customer c on s.snum=c.snum where c.city='London';       
+-------+------+--------+---------+
| sname | comm | city   | cname   |
+-------+------+--------+---------+
| Peel  | 0.12 | London | Hoffman |
| Peel  | 0.12 | London | praveen |
+-------+------+--------+---------+
=================================================================================================================================================
71. Write a query using ANY or ALL that will find all salespeople who have no customers located in
their city.
=================================================================================================================================================
72. Write a query using the EXISTS operator that selects all salespeople with customers located in
their cities who are not assigned to them.
select s.sname,s.city,c.cname,c.city as customer_city from salespeople s join customer c on s.snum=c.snum where s.city!=c.city;                                                                                                                              
+---------+-----------+---------+---------------+
| sname   | city      | cname   | customer_city |
+---------+-----------+---------+---------------+
| AxelRod | New York  | Ram     | Rome          |
| Serres  | San Jose  | Sath    | Berlin        |
| Motika  | London    | Satish  | Rome          |
| Rifkin  | Barcelona | Karthik | San Jose      |
+---------+-----------+---------+---------------+
=================================================================================================================================================
73. Write a query that selects all customers serviced by Peel or Motika. (Hint : The SNUM field
relates the two tables to one another.)
select s.snum,s.sname,c.cnum,c.cname from salespeople s join customer c on s.snum=c.snum where s.sname='Peel' or s.sname='Motika';
+------+--------+------+---------+
| snum | sname  | cnum | cname   |
+------+--------+------+---------+
| 1001 | Peel   | 2001 | Hoffman |
| 1001 | Peel   | 2006 | praveen |
| 1004 | Motika | 2007 | Satish  |
+------+--------+------+---------+
=================================================================================================================================================
74. Count the number of salespeople registering orders for each day. (If a salesperson has more
than one order on a given day, he or she should be counted only once.)
select o.odate,count(c.snum) as salespeople_registered_perday from customer c join orders o on c.cnum=o.cnum group by o.odate;                                                                                                                               
+------------+-------------------------------+
| odate      | salespeople_registered_perday |
+------------+-------------------------------+
| 1996-02-11 |                             1 |
| 1996-03-10 |                             1 |
| 1996-04-05 |                             1 |
| 1996-04-17 |                             1 |
| 1996-05-11 |                             1 |
| 1996-06-13 |                             1 |
| 1996-06-15 |                             1 |
| 1996-06-30 |                             1 |
| 1996-07-12 |                             1 |
| 1996-07-20 |                             1 |
+------------+-------------------------------+
=================================================================================================================================================
75. Find all orders attributed to salespeople in London.
select s.sname,c.city,o.onum from salespeople s join customer c join orders o on s.snum=c.snum and c.cnum=o.cnum where c.city='London';                                                                                                                      
+-------+--------+------+
| sname | city   | onum |
+-------+--------+------+
| Peel  | London | 3003 |
| Peel  | London | 3008 |
| Peel  | London | 3011 |
+-------+--------+------+
=================================================================================================================================================
77. Find all salespeople who have customers with more than one current order.
select s.snum,c.cnum,o.onum from salespeople s join customer c join orders o on s.snum=c.snum and c.cnum=o.cnum where count(o.onum)>1 group by s.snum;

=================================================================================================================================================
78. Write a query that extracts from the Customers table every customer assigned to a
salesperson who currently has at least one other customer (besides the customer being
selected) with orders in the Orders table.
select c.snum,c.cnum,o.onum from customer c join orders o on c.cnum=o.cnum;                                           
+------+------+------+
| snum | cnum | onum |
+------+------+------+
| 1001 | 2001 | 3003 |
| 1001 | 2006 | 3008 |
| 1001 | 2006 | 3011 |
| 1002 | 2003 | 3005 |
| 1002 | 2004 | 3010 |
| 1003 | 2002 | 3007 |
| 1003 | 2002 | 3009 |
| 1004 | 2007 | 3002 |
| 1007 | 2008 | 3001 |
| 1007 | 2008 | 3006 |
+------+------+------+
=================================================================================================================================================
79. Write a query that selects all customers whose names begin with ‘C’.
MariaDB [retail]> select * from customer where cname like 'c%';
Empty set (0.04 sec)
=================================================================================================================================================
80. Write a query on the Customers table that will find the highest rating in each city. Put the output
in this form : for the city (city) the highest rating is : (rating).
select city, max(rating) as rating from customer group by city;
+----------+--------+
| city     | rating |
+----------+--------+
| Berlin   |    300 |
| London   |    100 |
| Rome     |    200 |
| San Jose |    300 |
+----------+--------+
=================================================================================================================================================
81. Write a query that will produce the SNUM values of all salespeople with orders currently in the
Orders table (without any repeats).
select distinct s.snum from salespeople s join customer c join orders o on s.snum=c.snum and c.cnum=o.cnum;                                    
+------+
| snum |
+------+
| 1001 |
| 1002 |
| 1003 |
| 1004 |
| 1007 |
+------+
=================================================================================================================================================

82. Write a query that lists customers in descending order of rating. Output the rating field first,
followed by the customer’s names and numbers.
select rating,cname,cnum from customer order by rating desc;                                                         
+--------+---------+------+
| rating | cname   | cnum |
+--------+---------+------+
|    300 | Sath    | 2004 |
|    300 | Karthik | 2008 |
|    200 | Ram     | 2002 |
|    200 | Kishen  | 2003 |
|    100 | Hoffman | 2001 |
|    100 | praveen | 2006 |
|    100 | Satish  | 2007 |
+--------+---------+------+
=================================================================================================================================================
83. Find the average commission for salespeople in London
select city,avg(comm) as Average_Commision from salespeople where city in('london');                                                             
+--------+-------------------+
| city   | Average_Commision |
+--------+-------------------+
| London |          0.163333 |
+--------+-------------------+
=================================================================================================================================================
84. Find all orders credited to the same salesperson who services Hoffman (CNUM 2001)

MariaDB [retail]> select s.snum,s.sname,c.cnum,o.onum,o.amt from salespeople s join customer c join orders o on s.snum=c.snum and c.cnum=o.cnum where c.cnum=2001; 
+------+-------+------+------+--------+
| snum | sname | cnum | onum | amt    |
+------+-------+------+------+--------+
| 1001 | Peel  | 2001 | 3003 | 900.60 |
+------+-------+------+------+--------+
=================================================================================================================================================
85. Find all salespeople whose commission is in between 0.10 and 0.12 
select * from salespeople where comm between 0.10 and 0.12;
+------+---------+----------+------+
| snum | sname   | city     | comm |
+------+---------+----------+------+
| 1001 | Peel    | London   | 0.12 |
| 1003 | AxelRod | New York | 0.10 |
| 1004 | Motika  | London   | 0.11 |
+------+---------+----------+------+
=================================================================================================================================================
86. Write a query that will give you the names and cities of all salespeople in London with a
commission above 0.10

select sname,city from salespeople where city='London' and comm>0.10;                                                                            
+--------+--------+
| sname  | city   |
+--------+--------+
| Peel   | London |
| Motika | London |
| Fran   | London |
+--------+--------+
=================================================================================================================================================
87. What will be the output from the following query?
MariaDB [retail]> SELECT * FROM orders where (amt < 1000 OR NOT (odate = 10/03/1996 AND cnum > 2003));
+------+---------+------------+------+
| onum | amt     | odate      | cnum |
+------+---------+------------+------+
| 3001 |   18.69 | 1996-03-10 | 2008 |
| 3002 | 1800.09 | 1996-04-17 | 2007 |
| 3003 |  900.60 | 1996-04-05 | 2001 |
| 3005 |  156.10 | 1996-02-11 | 2003 |
| 3006 |  300.13 | 1996-05-11 | 2008 |
| 3007 |  111.19 | 1996-06-13 | 2002 |
| 3008 |  190.49 | 1996-07-12 | 2006 |
| 3009 |  345.90 | 1996-06-15 | 2002 |
| 3010 |  180.69 | 1996-06-30 | 2004 |
| 3011 |  234.19 | 1996-07-20 | 2006 |
+------+---------+------------+------+
=================================================================================================================================================

88. Write a query that selects each customer’s smallest order.

select c.cnum,c.cname,min(amt) as Least_Amt from customer c join orders o on c.cnum=o.cnum group by c.cnum;                                      
+------+---------+-----------+
| cnum | cname   | Least_Amt |
+------+---------+-----------+
| 2001 | Hoffman |    900.60 |
| 2002 | Ram     |    111.19 |
| 2003 | Kishen  |    156.10 |
| 2004 | Sath    |    180.69 |
| 2006 | praveen |    190.49 |
| 2007 | Satish  |   1800.09 |
| 2008 | Karthik |     18.69 |
+------+---------+-----------+

=================================================================================================================================================

89. Write a query that selects the first customer in alphabetical order whose name begins with G.

select * from customer where cname like 'g%';
Empty set (0.01 sec)

MariaDB [retail]> select * from customer where cname like 'G%';
Empty set (0.00 sec)
=================================================================================================================================================
90. Write a query that counts the number of different nonNULL city values in the Customers table.

select city,count(city) from customer where city is not null group by city;
+----------+-------------+
| city     | count(city) |
+----------+-------------+
| Berlin   |           1 |
| London   |           2 |
| Rome     |           2 |
| San Jose |           2 |
+----------+-------------+
=================================================================================================================================================











